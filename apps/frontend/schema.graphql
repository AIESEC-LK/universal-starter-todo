# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type OwnerEntity {
  id: ID!
  createdAt: Date!
  updatedAt: Date!

  """Owner Entity"""
  name: String!
}

type Link {
  id: ID!
  createdAt: Date!
  updatedAt: Date!

  """Link  name"""
  name: String!
  actualUrl: String!
  redirectUrl: String!
  entityId: ID!
  approved: Boolean!
  createdBy: String!
  entity: OwnerEntity
}

type LinkDeleteResponse {
  id: ID
  createdAt: Date
  updatedAt: Date

  """Link  name"""
  name: String
  actualUrl: String
  redirectUrl: String
  entityId: ID
  approved: Boolean
  createdBy: String
}

type LinkEdge {
  """The node containing the Link"""
  node: Link!

  """Cursor for this node."""
  cursor: ConnectionCursor!
}

"""Cursor for paging through collections"""
scalar ConnectionCursor

type PageInfo {
  """true if paging forward and there are more records."""
  hasNextPage: Boolean

  """true if paging backwards and there are more records."""
  hasPreviousPage: Boolean

  """The cursor of the first returned record."""
  startCursor: ConnectionCursor

  """The cursor of the last returned record."""
  endCursor: ConnectionCursor
}

type LinkConnection {
  """Paging information"""
  pageInfo: PageInfo!

  """Array of edges."""
  edges: [LinkEdge!]!
}

type OwnerEntityDeleteResponse {
  id: ID
  createdAt: Date
  updatedAt: Date

  """Owner Entity"""
  name: String
}

type OwnerEntityEdge {
  """The node containing the OwnerEntity"""
  node: OwnerEntity!

  """Cursor for this node."""
  cursor: ConnectionCursor!
}

type OwnerEntityConnection {
  """Paging information"""
  pageInfo: PageInfo!

  """Array of edges."""
  edges: [OwnerEntityEdge!]!
}

"""Date custom scalar type"""
scalar Date

type Query {
  link(
    """The id of the record to find."""
    id: ID!
  ): Link!
  links(
    """Limit or page results."""
    paging: CursorPaging = {first: 10}

    """Specify to filter the records returned."""
    filter: LinkFilter = {}

    """Paginate before opaque cursor"""
    before: ConnectionCursor

    """Paginate after opaque cursor"""
    after: ConnectionCursor

    """Paginate first"""
    first: Int

    """Paginate last"""
    last: Int

    """Specify to sort results."""
    sorting: [LinkSort!] = []
  ): LinkConnection!
  ownerEntity(
    """The id of the record to find."""
    id: ID!
  ): OwnerEntity!
  ownerEntities(
    """Limit or page results."""
    paging: CursorPaging = {first: 10}

    """Specify to filter the records returned."""
    filter: OwnerEntityFilter = {}

    """Paginate before opaque cursor"""
    before: ConnectionCursor

    """Paginate after opaque cursor"""
    after: ConnectionCursor

    """Paginate first"""
    first: Int

    """Paginate last"""
    last: Int

    """Specify to sort results."""
    sorting: [OwnerEntitySort!] = []
  ): OwnerEntityConnection!
}

input CursorPaging {
  """Paginate before opaque cursor"""
  before: ConnectionCursor

  """Paginate after opaque cursor"""
  after: ConnectionCursor

  """Paginate first"""
  first: Int

  """Paginate last"""
  last: Int
}

input LinkFilter {
  and: [LinkFilter!]
  or: [LinkFilter!]
  id: LinkIdFilterComparison
  createdAt: DateFieldComparison
  updatedAt: DateFieldComparison
  name: StringFieldComparison
  actualUrl: StringFieldComparison
  redirectUrl: StringFieldComparison
  entityId: IDFilterComparison
  approved: BooleanFieldComparison
  createdBy: StringFieldComparison
  entity: LinkFilterOwnerEntityFilter
}

input LinkIdFilterComparison {
  eq: ID
  in: [ID!]
}

input DateFieldComparison {
  is: Boolean
  isNot: Boolean
  eq: DateTime
  neq: DateTime
  gt: DateTime
  gte: DateTime
  lt: DateTime
  lte: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  between: DateFieldComparisonBetween
  notBetween: DateFieldComparisonBetween
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DateFieldComparisonBetween {
  lower: DateTime!
  upper: DateTime!
}

input StringFieldComparison {
  is: Boolean
  isNot: Boolean
  eq: String
  neq: String
  gt: String
  gte: String
  lt: String
  lte: String
  like: String
  notLike: String
  iLike: String
  notILike: String
  in: [String!]
  notIn: [String!]
}

input IDFilterComparison {
  is: Boolean
  isNot: Boolean
  eq: ID
  neq: ID
  gt: ID
  gte: ID
  lt: ID
  lte: ID
  like: ID
  notLike: ID
  iLike: ID
  notILike: ID
  in: [ID!]
  notIn: [ID!]
}

input BooleanFieldComparison {
  is: Boolean
  isNot: Boolean
}

input LinkFilterOwnerEntityFilter {
  and: [LinkFilterOwnerEntityFilter!]
  or: [LinkFilterOwnerEntityFilter!]
  id: OwnerEntityIdFilterComparison
  createdAt: DateFieldComparison
  updatedAt: DateFieldComparison
  name: StringFieldComparison
}

input OwnerEntityIdFilterComparison {
  eq: ID
  in: [ID!]
}

input LinkSort {
  field: LinkSortFields!
  direction: SortDirection!
  nulls: SortNulls
}

enum LinkSortFields {
  id
  createdAt
  updatedAt
  name
  actualUrl
  redirectUrl
  entityId
  approved
  createdBy
}

"""Sort Directions"""
enum SortDirection {
  ASC
  DESC
}

"""Sort Nulls Options"""
enum SortNulls {
  NULLS_FIRST
  NULLS_LAST
}

input OwnerEntityFilter {
  and: [OwnerEntityFilter!]
  or: [OwnerEntityFilter!]
  id: OwnerEntityIdFilterComparison
  createdAt: DateFieldComparison
  updatedAt: DateFieldComparison
  name: StringFieldComparison
}

input OwnerEntitySort {
  field: OwnerEntitySortFields!
  direction: SortDirection!
  nulls: SortNulls
}

enum OwnerEntitySortFields {
  id
  createdAt
  updatedAt
  name
}

type Mutation {
  setEntityOnLink(input: SetEntityOnLinkInput!): Link!
  createOneLink(input: CreateOneLinkInput!): Link!
  updateOneLink(input: UpdateOneLinkInput!): Link!
  deleteOneLink(input: DeleteOneLinkInput!): LinkDeleteResponse!
  createOneOwnerEntity(input: CreateOneOwnerEntityInput!): OwnerEntity!
  updateOneOwnerEntity(input: UpdateOneOwnerEntityInput!): OwnerEntity!
  deleteOneOwnerEntity(input: DeleteOneOwnerEntityInput!): OwnerEntityDeleteResponse!
}

input SetEntityOnLinkInput {
  """The id of the record."""
  id: ID!

  """The id of relation."""
  relationId: ID!
}

input CreateOneLinkInput {
  """The record to create"""
  link: CreateLink!
}

input CreateLink {
  """Link  name"""
  name: String!
  actualUrl: String!
  redirectUrl: String!
  entityId: ID!
}

input UpdateOneLinkInput {
  """The id of the record to update"""
  id: ID!

  """The update to apply."""
  update: UpdateLink!
}

input UpdateLink {
  """Link  name"""
  name: String
  actualUrl: String
  redirectUrl: String
  entityId: ID
  approved: Boolean
  createdBy: String
}

input DeleteOneLinkInput {
  """The id of the record to delete."""
  id: ID!
}

input CreateOneOwnerEntityInput {
  """The record to create"""
  ownerEntity: CreateOwnerEntity!
}

input CreateOwnerEntity {
  """Owner Entity"""
  name: String!
}

input UpdateOneOwnerEntityInput {
  """The id of the record to update"""
  id: ID!

  """The update to apply."""
  update: UpdateOwnerEntity!
}

input UpdateOwnerEntity {
  """Owner Entity"""
  name: String
}

input DeleteOneOwnerEntityInput {
  """The id of the record to delete."""
  id: ID!
}